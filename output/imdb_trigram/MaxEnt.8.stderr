Training vectors loaded from ../output/imdb_trigram/train.8.vectors
Testing vectors loaded from ../output/imdb_trigram/test.8.vectors
Value (labelProb=1247.6649250078444 prior=0.0) loglikelihood = -1247.6649250078444Value (labelProb=209817.17174081848 prior=0.5000000000004484) loglikelihood = -209817.67174081848Value (labelProb=20982.593953008294 prior=0.005000000000006639) loglikelihood = -20982.598953008295Value (labelProb=10494.723449874666 prior=0.0012500000000016597) loglikelihood = -10494.724699874665Value (labelProb=5273.507962207896 prior=3.12500000000415E-4) loglikelihood = -5273.508274707896    Value (labelProb=2761.3687789654628 prior=7.812500000010376E-5) loglikelihood = -2761.368857090463Value (labelProb=1700.0230968444096 prior=1.9531250000025994E-5) loglikelihood = -1700.0231163756596Value (labelProb=1346.7650414617785 prior=4.882812500006505E-6) loglikelihood = -1346.765046344591  Value (labelProb=1257.4949442441289 prior=1.2207031250016287E-6) loglikelihood = -1257.494945464832Value (labelProb=1241.877866557351 prior=3.051757812504086E-7) loglikelihood = -1241.8778668625266 Value (labelProb=1241.877866557351 prior=3.051757812504086E-7) loglikelihood = -1241.8778668625266
EXITING BACKTRACK: Jump too small (alamin=0.001610222603466672). Exiting and using xold. Value=-1241.8778668625266
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:231)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:252)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at cc.mallet.classify.tui.Vectors2Classify.main(Vectors2Classify.java:411)
Catching OptimizationException; saying converged.
Instance null has infinite value; skipping value and gradient
Value is infinite after jump 1.0. f=-Infinity, f2=-1241.8778668625266. Scaling back step size...
Value (labelProb=41863.80644631534 prior=0.019928553350919254) loglikelihood = -41863.826374868695
Value is infinite after jump 0.2. f=-41863.826374868695, f2=-Infinity. Scaling back step size...
Value (labelProb=8225.853554575779 prior=7.859548108088457E-4) loglikelihood = -8225.85434053059Value (labelProb=4084.179002202523 prior=1.931299932950562E-4) loglikelihood = -4084.1791953325164Value (labelProb=2194.821900127889 prior=4.671758453815116E-5) loglikelihood = -2194.8219468454736Value (labelProb=1490.4984914780905 prior=1.101138015970078E-5) loglikelihood = -1490.4985024894706Value (labelProb=1289.5764392176345 prior=2.5332779704755182E-6) loglikelihood = -1289.5764417509124Value (labelProb=1244.95926055569 prior=6.379768758628435E-7) loglikelihood = -1244.9592611936669   Value (labelProb=1238.1905313083719 prior=2.7626382855652884E-7) loglikelihood = -1238.1905315846357Value (labelProb=1238.1905313083719 prior=2.7626382855652884E-7) loglikelihood = -1238.1905315846357
EXITING BACKTRACK: Jump too small (alamin=0.0013301198809225374). Exiting and using xold. Value=-1238.1905315846357
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:231)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:93)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at cc.mallet.classify.tui.Vectors2Classify.main(Vectors2Classify.java:411)
Catching OptimizationException; saying converged.

